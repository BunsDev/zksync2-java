package io.zksync.protocol;

import io.zksync.helper.CounterContract;
import io.zksync.helper.RequestTester;
import org.junit.jupiter.api.Test;
import org.web3j.protocol.http.HttpService;

import java.math.BigInteger;

class ZkSyncRequestTest extends RequestTester {

    private ZkSync zkSync;

    @Override
    protected void initWeb3Client(HttpService httpService) {
        zkSync = ZkSync.build(httpService);
    }

    @Test
    void zksEstimateFee() throws Exception {
        io.zksync.methods.request.Transaction estimate = io.zksync.methods.request.Transaction.createFunctionCallTransaction(
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                BigInteger.ZERO,
                BigInteger.ZERO,
                "0x"
        );

        zkSync.zksEstimateFee(estimate).send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_estimateFee\",\"params\":[{\"from\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"to\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"gas\":\"0x0\",\"gasPrice\":\"0x0\",\"data\":\"0x\",\"transactionType\":\"0x71\",\"eip712Meta\":{\"ergsPerPubdata\":\"0x27100\"}}],\"id\":1}");
    }

    @Test
    void ethEstimateFee_DeployContract() throws Exception {
        io.zksync.methods.request.Transaction estimate = io.zksync.methods.request.Transaction.create2ContractTransaction(
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                BigInteger.ZERO,
                BigInteger.ZERO,
                CounterContract.BINARY
        );

        zkSync.zksEstimateFee(estimate).send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_estimateFee\",\"params\":[{\"from\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"to\":\"0x0000000000000000000000000000000000008006\",\"gas\":\"0x0\",\"gasPrice\":\"0x0\",\"data\":\"0x1415dae2000000000000000000000000000000000000000000000000000000000000000000379c09b5568d43b0ac6533a2672ee836815530b412f082f0b2e69915aa50fc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000\",\"transactionType\":\"0x71\",\"eip712Meta\":{\"ergsPerPubdata\":\"0x27100\",\"factoryDeps\":[[0,0,0,43,4,0,0,65,0,0,0,0,1,65,1,111,0,0,0,44,4,0,0,65,0,0,0,0,0,20,3,118,0,0,0,45,1,0,0,65,0,0,0,0,0,33,3,118,0,0,0,0,1,48,0,76,0,0,0,9,0,0,97,61,0,165,0,10,0,0,3,79,0,165,0,31,0,0,3,79,0,0,0,128,1,0,0,57,0,0,0,64,2,0,0,57,0,0,0,0,0,18,3,118,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,29,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,0,1,16,0,76,0,0,0,24,0,0,193,61,0,0,0,128,1,0,0,57,0,0,0,0,2,0,0,25,0,0,0,0,3,0,0,25,0,165,0,150,0,0,3,79,0,0,0,32,1,0,0,57,0,0,0,0,0,16,3,118,0,0,0,0,0,1,3,118,0,0,0,46,1,0,0,65,0,0,0,166,0,1,3,112,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,1,0,0,0,0,0,2,0,0,0,128,6,0,0,57,0,0,0,64,5,0,0,57,0,0,0,0,0,101,3,118,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,140,0,0,0,90,0,0,65,61,0,0,0,44,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,0,1,1,3,119,0,0,0,47,2,0,0,65,0,0,0,0,1,33,1,111,0,0,0,48,2,16,0,156,0,0,0,68,0,0,193,61,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,92,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,138,0,0,0,1,2,0,0,138,0,0,0,50,3,0,0,65,0,0,0,0,2,33,0,75,0,0,0,0,2,0,0,25,0,0,0,0,2,3,32,25,0,0,0,0,1,49,1,111,0,0,0,0,4,49,1,63,0,0,0,50,1,16,0,156,0,0,0,0,1,0,0,25,0,0,0,0,1,3,64,25,0,0,0,50,3,64,0,156,0,0,0,0,1,2,192,25,0,0,0,0,1,16,0,76,0,0,0,94,0,0,193,61,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,49,1,16,0,156,0,0,0,90,0,0,193,61,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,101,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,138,0,0,0,50,2,0,0,65,0,0,0,31,3,16,0,140,0,0,0,0,3,0,0,25,0,0,0,0,3,2,32,25,0,0,0,0,1,33,1,111,0,0,0,0,4,16,0,76,0,0,0,0,2,0,128,25,0,0,0,50,1,16,0,156,0,0,0,0,1,3,0,25,0,0,0,0,1,2,96,25,0,0,0,0,1,16,0,76,0,0,0,103,0,0,193,61,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,1,0,0,0,6,0,29,0,165,0,139,0,0,3,79,0,0,0,1,2,0,0,41,0,0,0,0,0,18,3,118,0,0,0,52,1,0,0,65,0,0,0,166,0,1,3,112,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,44,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,57,0,0,0,0,1,1,3,119,0,1,0,0,0,5,0,29,0,165,0,114,0,0,3,79,0,0,0,1,1,0,0,41,0,0,0,0,1,1,3,117,0,0,0,51,2,0,0,65,0,0,0,0,1,33,1,111,0,0,0,166,0,1,3,112,0,2,0,0,0,0,0,2,0,0,0,1,2,0,0,138,0,1,0,0,0,1,0,29,0,0,0,0,1,33,1,63,0,2,0,0,0,1,0,29,0,0,0,0,1,0,0,25,0,165,0,139,0,0,3,79,0,0,0,2,2,0,0,41,0,0,0,0,2,33,0,75,0,0,0,130,0,0,33,61,0,0,0,1,2,0,0,41,0,0,0,0,1,33,0,25,0,0,0,0,2,0,0,25,0,165,0,137,0,0,3,79,0,0,0,2,0,0,0,5,0,0,0,0,0,1,3,111,0,0,0,53,1,0,0,65,0,0,0,0,0,16,3,118,0,0,0,17,1,0,0,57,0,0,0,4,2,0,0,57,0,0,0,0,0,18,3,118,0,0,0,54,1,0,0,65,0,0,0,167,0,1,3,114,0,0,0,0,0,18,3,91,0,0,0,0,0,1,3,111,0,0,0,0,1,1,3,89,0,0,0,0,0,1,3,111,0,0,0,0,4,1,3,117,0,0,0,0,4,52,1,207,0,0,0,0,4,52,2,47,0,0,1,0,3,48,0,137,0,0,0,0,2,50,2,47,0,0,0,0,2,50,1,207,0,0,0,0,2,66,1,159,0,0,0,0,0,33,3,118,0,0,0,0,0,1,3,111,0,0,0,5,4,48,2,112,0,0,0,0,5,64,0,76,0,0,0,158,0,0,97,61,0,0,0,0,0,33,3,118,0,0,0,32,1,16,0,57,0,0,0,1,4,64,0,138,0,0,0,0,5,64,0,76,0,0,0,153,0,0,193,61,0,0,0,31,3,48,1,143,0,0,0,0,4,48,0,76,0,0,0,164,0,0,97,61,0,0,0,3,3,48,2,16,0,165,0,141,0,0,3,79,0,0,0,0,0,1,3,111,0,0,0,0,0,1,3,111,0,0,0,165,0,0,3,116,0,0,0,166,0,1,3,112,0,0,0,167,0,1,3,114,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,76,230,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,245,218,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,128,78,72,123,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0]]}}],\"id\":1}");
    }

    @Test
    void zksMainContract() throws Exception {
        zkSync.zksMainContract().send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getMainContract\",\"params\":[],\"id\":1}");
    }

    @Test
    void zksGetConfirmedTokens() throws Exception {
        zkSync.zksGetConfirmedTokens(0, (short) 10).send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getConfirmedTokens\",\"params\":[0,10],\"id\":1}");
    }

    @Test
    void zksGetTokenPrice() throws Exception {
        zkSync.zksGetTokenPrice("0x0000000000000000000000000000000000000000").send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getTokenPrice\",\"params\":[\"0x0000000000000000000000000000000000000000\"],\"id\":1}");
    }

    @Test
    void zksL1ChainId() throws Exception {
        zkSync.zksL1ChainId().send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_L1ChainId\",\"params\":[],\"id\":1}");
    }

    @Test
    void zksGetContractDebugInfo() {
    }

    @Test
    void zksGetTransactionTrace() {
    }

    @Test
    void zksGetAllAccountBalances() throws Exception {
        zkSync.zksGetAllAccountBalances("0x7e5f4552091a69125d5dfcb7b8c2659029395bdf").send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getAllAccountBalances\",\"params\":[\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\"],\"id\":1}");
    }

    @Test
    void zksGetBridgeContracts() throws Exception {
        zkSync.zksGetBridgeContracts().send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getBridgeContracts\",\"params\":[],\"id\":1}");
    }

    @Test
    void zksGetL2ToL1MsgProof() {
    }

    @Test
    void ethEstimateGas() throws Exception {
        io.zksync.methods.request.Transaction estimate = io.zksync.methods.request.Transaction.createFunctionCallTransaction(
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                BigInteger.ZERO,
                BigInteger.ZERO,
                "0x"
        );

        zkSync.ethEstimateGas(estimate).send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"to\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"gas\":\"0x0\",\"gasPrice\":\"0x0\",\"data\":\"0x\",\"transactionType\":\"0x71\",\"eip712Meta\":{\"ergsPerPubdata\":\"0x27100\"}}],\"id\":1}");
    }

    @Test
    void ethEstimateGas_DeployContract() throws Exception {
        io.zksync.methods.request.Transaction estimate = io.zksync.methods.request.Transaction.create2ContractTransaction(
                "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
                BigInteger.ZERO,
                BigInteger.ZERO,
                CounterContract.BINARY
        );

        zkSync.ethEstimateGas(estimate).send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"0x7e5f4552091a69125d5dfcb7b8c2659029395bdf\",\"to\":\"0x0000000000000000000000000000000000008006\",\"gas\":\"0x0\",\"gasPrice\":\"0x0\",\"data\":\"0x1415dae2000000000000000000000000000000000000000000000000000000000000000000379c09b5568d43b0ac6533a2672ee836815530b412f082f0b2e69915aa50fc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000\",\"transactionType\":\"0x71\",\"eip712Meta\":{\"ergsPerPubdata\":\"0x27100\",\"factoryDeps\":[[0,0,0,43,4,0,0,65,0,0,0,0,1,65,1,111,0,0,0,44,4,0,0,65,0,0,0,0,0,20,3,118,0,0,0,45,1,0,0,65,0,0,0,0,0,33,3,118,0,0,0,0,1,48,0,76,0,0,0,9,0,0,97,61,0,165,0,10,0,0,3,79,0,165,0,31,0,0,3,79,0,0,0,128,1,0,0,57,0,0,0,64,2,0,0,57,0,0,0,0,0,18,3,118,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,29,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,0,1,16,0,76,0,0,0,24,0,0,193,61,0,0,0,128,1,0,0,57,0,0,0,0,2,0,0,25,0,0,0,0,3,0,0,25,0,165,0,150,0,0,3,79,0,0,0,32,1,0,0,57,0,0,0,0,0,16,3,118,0,0,0,0,0,1,3,118,0,0,0,46,1,0,0,65,0,0,0,166,0,1,3,112,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,1,0,0,0,0,0,2,0,0,0,128,6,0,0,57,0,0,0,64,5,0,0,57,0,0,0,0,0,101,3,118,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,140,0,0,0,90,0,0,65,61,0,0,0,44,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,0,1,1,3,119,0,0,0,47,2,0,0,65,0,0,0,0,1,33,1,111,0,0,0,48,2,16,0,156,0,0,0,68,0,0,193,61,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,92,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,138,0,0,0,1,2,0,0,138,0,0,0,50,3,0,0,65,0,0,0,0,2,33,0,75,0,0,0,0,2,0,0,25,0,0,0,0,2,3,32,25,0,0,0,0,1,49,1,111,0,0,0,0,4,49,1,63,0,0,0,50,1,16,0,156,0,0,0,0,1,0,0,25,0,0,0,0,1,3,64,25,0,0,0,50,3,64,0,156,0,0,0,0,1,2,192,25,0,0,0,0,1,16,0,76,0,0,0,94,0,0,193,61,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,49,1,16,0,156,0,0,0,90,0,0,193,61,0,0,0,0,1,0,3,87,0,0,0,0,1,16,0,76,0,0,0,101,0,0,193,61,0,0,0,45,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,138,0,0,0,50,2,0,0,65,0,0,0,31,3,16,0,140,0,0,0,0,3,0,0,25,0,0,0,0,3,2,32,25,0,0,0,0,1,33,1,111,0,0,0,0,4,16,0,76,0,0,0,0,2,0,128,25,0,0,0,50,1,16,0,156,0,0,0,0,1,3,0,25,0,0,0,0,1,2,96,25,0,0,0,0,1,16,0,76,0,0,0,103,0,0,193,61,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,0,1,0,0,25,0,1,0,0,0,6,0,29,0,165,0,139,0,0,3,79,0,0,0,1,2,0,0,41,0,0,0,0,0,18,3,118,0,0,0,52,1,0,0,65,0,0,0,166,0,1,3,112,0,0,0,0,1,0,0,25,0,0,0,167,0,1,3,114,0,0,0,44,1,0,0,65,0,0,0,0,1,1,3,117,0,0,0,4,1,16,0,57,0,0,0,0,1,1,3,119,0,1,0,0,0,5,0,29,0,165,0,114,0,0,3,79,0,0,0,1,1,0,0,41,0,0,0,0,1,1,3,117,0,0,0,51,2,0,0,65,0,0,0,0,1,33,1,111,0,0,0,166,0,1,3,112,0,2,0,0,0,0,0,2,0,0,0,1,2,0,0,138,0,1,0,0,0,1,0,29,0,0,0,0,1,33,1,63,0,2,0,0,0,1,0,29,0,0,0,0,1,0,0,25,0,165,0,139,0,0,3,79,0,0,0,2,2,0,0,41,0,0,0,0,2,33,0,75,0,0,0,130,0,0,33,61,0,0,0,1,2,0,0,41,0,0,0,0,1,33,0,25,0,0,0,0,2,0,0,25,0,165,0,137,0,0,3,79,0,0,0,2,0,0,0,5,0,0,0,0,0,1,3,111,0,0,0,53,1,0,0,65,0,0,0,0,0,16,3,118,0,0,0,17,1,0,0,57,0,0,0,4,2,0,0,57,0,0,0,0,0,18,3,118,0,0,0,54,1,0,0,65,0,0,0,167,0,1,3,114,0,0,0,0,0,18,3,91,0,0,0,0,0,1,3,111,0,0,0,0,1,1,3,89,0,0,0,0,0,1,3,111,0,0,0,0,4,1,3,117,0,0,0,0,4,52,1,207,0,0,0,0,4,52,2,47,0,0,1,0,3,48,0,137,0,0,0,0,2,50,2,47,0,0,0,0,2,50,1,207,0,0,0,0,2,66,1,159,0,0,0,0,0,33,3,118,0,0,0,0,0,1,3,111,0,0,0,5,4,48,2,112,0,0,0,0,5,64,0,76,0,0,0,158,0,0,97,61,0,0,0,0,0,33,3,118,0,0,0,32,1,16,0,57,0,0,0,1,4,64,0,138,0,0,0,0,5,64,0,76,0,0,0,153,0,0,193,61,0,0,0,31,3,48,1,143,0,0,0,0,4,48,0,76,0,0,0,164,0,0,97,61,0,0,0,3,3,48,2,16,0,165,0,141,0,0,3,79,0,0,0,0,0,1,3,111,0,0,0,0,0,1,3,111,0,0,0,165,0,0,3,116,0,0,0,166,0,1,3,112,0,0,0,167,0,1,3,114,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,224,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,76,230,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,245,218,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,128,78,72,123,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0]]}}],\"id\":1}");
    }

    @Test
    void zksGetTestnetPaymaster() throws Exception {
        zkSync.zksGetTestnetPaymaster().send();

        verifyResult("{\"jsonrpc\":\"2.0\",\"method\":\"zks_getTestnetPaymaster\",\"params\":[],\"id\":1}");
    }
}